{"ast":null,"code":"var _jsxFileName = \"/home/laiju/Desktop/React/Reactprjt/Netflixprjt/src/components/RowPost/RowPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './RowPost.css';\nimport YouTube from 'react-youtube';\nimport { imageUrl, API_KEY } from '../../constants/constants';\nimport axios from '../../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RowPost(props) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [UrlId, setUrlId] = useState('');\n  useEffect(() => {\n    axios.get(props.url).then(response => {\n      console.log(response.data);\n      setMovies(response.data.results);\n    }).catch(err => {\n      alert('network error');\n    });\n  }, []);\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      //   https://developers.google.com/youtube/player_parameters\n      autoplay: 0\n    }\n  };\n\n  const handleMovie = id => {\n    console.log(id);\n    axios.get(`movie/${id}/videos?api_key=${API_KEY}&language=en-US\n        `).then(response => {\n      if (response.data.results.length !== 0) {\n        setUrlId(response.data.results[0]);\n      } else {\n        console.log('array empty');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map(obj => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleMovie(obj.id),\n        src: `${imageUrl + obj.backdrop_path}`,\n        alt: \"poster\",\n        className: props.isSmall ? 'smallposter' : 'poster'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: \"2g811Eo7K8U\",\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RowPost, \"DHRdRqfmB/YuiQuduJE9A8+yMfA=\");\n\n_c = RowPost;\nexport default RowPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"RowPost\");","map":{"version":3,"sources":["/home/laiju/Desktop/React/Reactprjt/Netflixprjt/src/components/RowPost/RowPost.js"],"names":["React","useEffect","useState","YouTube","imageUrl","API_KEY","axios","RowPost","props","movies","setMovies","UrlId","setUrlId","get","url","then","response","console","log","data","results","catch","err","alert","opts","height","width","playerVars","autoplay","handleMovie","id","length","title","map","obj","backdrop_path","isSmall"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,eAAP;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,QAAT,EAAkBC,OAAlB,QAAiC,2BAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAmBV,QAAQ,CAAC,EAAD,CAAjC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CAACO,GAAN,CAAUL,KAAK,CAACM,GAAhB,EAAqBC,IAArB,CAA0BC,QAAQ,IAAI;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAT,MAAAA,SAAS,CAACM,QAAQ,CAACG,IAAT,CAAcC,OAAf,CAAT;AACH,KAHD,EAGGC,KAHH,CAGSC,GAAG,IAAI;AACZC,MAAAA,KAAK,CAAC,eAAD,CAAL;AACH,KALD;AAMH,GAPQ,EAON,EAPM,CAAT;AAQA,QAAMC,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,KADC;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,UAAU,EAAE;AACR;AACAC,MAAAA,QAAQ,EAAE;AAFF;AAHH,GAAb;;AAQA,QAAMC,WAAW,GAAIC,EAAD,IAAQ;AACxBb,IAAAA,OAAO,CAACC,GAAR,CAAYY,EAAZ;AACAxB,IAAAA,KAAK,CAACO,GAAN,CAAW,SAAQiB,EAAG,mBAAkBzB,OAAQ;AACxD,SADQ,EACGU,IADH,CACQC,QAAQ,IAAE;AACd,UAAGA,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsBW,MAAtB,KAA+B,CAAlC,EAAoC;AAChCnB,QAAAA,QAAQ,CAACI,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsB,CAAtB,CAAD,CAAR;AACH,OAFD,MAEK;AACDH,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH;AACJ,KAPD;AAQH,GAVD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,gBAAKV,KAAK,CAACwB;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACKvB,MAAM,CAACwB,GAAP,CAAYC,GAAD,iBACR;AAAK,QAAA,OAAO,EAAE,MAAML,WAAW,CAACK,GAAG,CAACJ,EAAL,CAA/B;AAAyC,QAAA,GAAG,EAAG,GAAE1B,QAAQ,GAAG8B,GAAG,CAACC,aAAc,EAA9E;AAAiF,QAAA,GAAG,EAAC,QAArF;AAA8F,QAAA,SAAS,EAAE3B,KAAK,CAAC4B,OAAN,GAAgB,aAAhB,GAAgC;AAAzI;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,aAAjB;AAA+B,MAAA,IAAI,EAAEZ;AAArC;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA7CQjB,O;;KAAAA,O;AA+CT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './RowPost.css'\nimport YouTube from 'react-youtube'\nimport { imageUrl,API_KEY } from '../../constants/constants'\nimport axios from '../../axios'\nfunction RowPost(props) {\n    const [movies, setMovies] = useState([])\n    const [UrlId, setUrlId]= useState('')\n    useEffect(() => {\n        axios.get(props.url).then(response => {\n            console.log(response.data)\n            setMovies(response.data.results)\n        }).catch(err => {\n            alert('network error')\n        })\n    }, [])\n    const opts = {\n        height: '390',\n        width: '100%',\n        playerVars: {\n            //   https://developers.google.com/youtube/player_parameters\n            autoplay: 0,\n        },\n    };\n    const handleMovie = (id) => {\n        console.log(id)\n        axios.get(`movie/${id}/videos?api_key=${API_KEY}&language=en-US\n        `).then(response=>{\n            if(response.data.results.length!==0){\n                setUrlId(response.data.results[0])\n            }else{\n                console.log('array empty')\n            }\n        })\n    }\n    return (\n        <div className=\"row\">\n            <h2>{props.title}</h2>\n            <div className=\"posters\">\n                {movies.map((obj) =>\n                    <img onClick={() => handleMovie(obj.id)} src={`${imageUrl + obj.backdrop_path}`} alt=\"poster\" className={props.isSmall ? 'smallposter' : 'poster'} />\n                )\n                }\n\n\n            </div>\n            <YouTube videoId=\"2g811Eo7K8U\" opts={opts} />\n\n        </div>\n    )\n}\n\nexport default RowPost\n"]},"metadata":{},"sourceType":"module"}