{"ast":null,"code":"var _jsxFileName = \"/home/laiju/Desktop/React/Reactprjt/Netflixprjt/src/components/RowPost/RowPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './RowPost.css';\nimport YouTube from 'react-youtube';\nimport { imageUrl } from '../../constants/constants';\nimport axios from '../../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RowPost(props) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    axios.get(props.url).then(response => {\n      console.log(response.data);\n      setMovies(response.data.results);\n    }).catch(err => {\n      alert('network error');\n    });\n  }, []);\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      //   https://developers.google.com/youtube/player_parameters\n      autoplay: 0\n    }\n  };\n\n  const handleMovie = id => {\n    consol;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map(obj => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleMovie(obj.id),\n        src: `${imageUrl + obj.backdrop_path}`,\n        alt: \"poster\",\n        className: props.isSmall ? 'smallposter' : 'poster'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 14\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: \"2g811Eo7K8U\",\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RowPost, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = RowPost;\nexport default RowPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"RowPost\");","map":{"version":3,"sources":["/home/laiju/Desktop/React/Reactprjt/Netflixprjt/src/components/RowPost/RowPost.js"],"names":["React","useEffect","useState","YouTube","imageUrl","axios","RowPost","props","movies","setMovies","get","url","then","response","console","log","data","results","catch","err","alert","opts","height","width","playerVars","autoplay","handleMovie","id","consol","title","map","obj","backdrop_path","isSmall"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAO,eAAP;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAAQC,QAAR,QAAuB,2BAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAACK,GAAN,CAAUH,KAAK,CAACI,GAAhB,EAAqBC,IAArB,CAA0BC,QAAQ,IAAG;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAP,MAAAA,SAAS,CAACI,QAAQ,CAACG,IAAT,CAAcC,OAAf,CAAT;AACH,KAHD,EAGGC,KAHH,CAGSC,GAAG,IAAE;AACVC,MAAAA,KAAK,CAAC,eAAD,CAAL;AACH,KALD;AAMP,GAPY,EAOV,EAPU,CAAT;AAQJ,QAAMC,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,KADC;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,UAAU,EAAE;AACZ;AACEC,MAAAA,QAAQ,EAAE;AAFA;AAHH,GAAb;;AAQE,QAAMC,WAAW,GAAGC,EAAD,IAAM;AAC3BC,IAAAA,MAAM;AACH,GAFD;;AAGF,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,gBAAKrB,KAAK,CAACsB;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACKrB,MAAM,CAACsB,GAAP,CAAYC,GAAD,iBACX;AAAK,QAAA,OAAO,EAAE,MAAIL,WAAW,CAACK,GAAG,CAACJ,EAAL,CAA7B;AAAuC,QAAA,GAAG,EAAG,GAAEvB,QAAQ,GAAC2B,GAAG,CAACC,aAAc,EAA1E;AAA6E,QAAA,GAAG,EAAC,QAAjF;AAA0F,QAAA,SAAS,EAAEzB,KAAK,CAAC0B,OAAN,GAAgB,aAAhB,GAA8B;AAAnI;AAAA;AAAA;AAAA;AAAA,cADA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,aAAjB;AAA+B,MAAA,IAAI,EAAEZ;AAArC;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeC;;GApCQf,O;;KAAAA,O;AAsCT,eAAeA,OAAf","sourcesContent":["import React, { useEffect,useState } from 'react'\nimport './RowPost.css'\nimport YouTube from 'react-youtube'\nimport {imageUrl} from '../../constants/constants'\nimport axios from '../../axios'\nfunction RowPost(props) {\n    const [movies, setMovies] = useState([])\n    useEffect(() => {\n        axios.get(props.url).then(response =>{\n            console.log(response.data)\n            setMovies(response.data.results)\n        }).catch(err=>{\n            alert('network error')\n        })\n}, []) \nconst opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n    //   https://developers.google.com/youtube/player_parameters\n      autoplay: 0,\n    },\n  }; \n  const handleMovie =(id)=>{\nconsol\n  }\nreturn (\n    <div className=\"row\">\n        <h2>{props.title}</h2>\n        <div className=\"posters\">\n            {movies.map((obj)=>\n             <img onClick={()=>handleMovie(obj.id)} src={`${imageUrl+obj.backdrop_path}`} alt=\"poster\" className={props.isSmall ? 'smallposter':'poster'}/>\n            )\n        }\n            \n\n        </div>\n        <YouTube videoId=\"2g811Eo7K8U\" opts={opts}/>\n\n    </div>\n)\n}\n\nexport default RowPost\n"]},"metadata":{},"sourceType":"module"}